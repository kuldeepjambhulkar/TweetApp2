<!DOCTYPE html>
<html lang="en">
<head>
<head>
    <%- include('../partials/head') %>
    <title>UltraSocial | Feed</title>
    <style>
    hr {
    color: #000000;
}
</style>
</head>
<body>
    <div class="container"  style="max-width: 600px;">
        <div class="row mt-5">
            <div class="col">
                <!-- User greeting -->
                <div class="row pb-5 pt-5 d-flex sticky-top bg-white">
                    <div class="col">
                        <h4 id="header_greetings">Hello, <%=  tweetsAndUserObj.currentLoggedInUser1[0].DisplayName %></h4>
                        <p id="header_greetings_time"></p>
                    </div>
                    <div class="col d-flex flex-column justify-content-center align-items-end">
                        <div id ="imglogo" class="me-1">
                            <img class="img-fluid rounded-circle img-thumbnail" style="
                            width: 4rem;
                            object-fit: cover;
                            width: 70px;
                            height: 70px;" src=<%= 'data:image/png;base64,' + tweetsAndUserObj.currentLoggedInUser1[0].Base64  %> alt="">
                        </div>
                        <div class="col">
                            <button class="btn btn-danger"  id="logout">Logout</button>
                        </div>
                    </div>
                    
                </div>

                <!-- Post new tweet -->
                <div class="row mb-5">
                    <div class="col">
                        <form id="newTweet" class="mb-2 mt-1">
                            <textarea class="form-control" type="textarea" rows="4" cols="50"  id="textContent" placeholder="Say something..."></textarea> 
                            <input class="btn btn-primary mt-1" type="submit" value="Post">
                        </form>
                    </div>
                </div>

                <!-- Display all tweerts -->
                <div>
                    <% tweetsAndUserObj.resultData.forEach(function(tweet) { %>
                        <div style="margin-bottom: 2rem;">
                            <img class="img-fluid rounded-circle img-thumbnail" style="
                            width: 4rem;
                            object-fit: cover;
                            width: 70px;
                            height: 70px;" src=<%= 'data:image/png;base64,' + tweet.author.Base64  %> alt="">

                            <strong><%= tweet.author.DisplayName %></strong>
                            <p class="mb-0">@<%= tweet.author.UserName %></p> <br>
                            <h5 id = <%= "content" + tweet._id %> value= <%= tweet._id %>  > <%= tweet.textContent %> <br></h5>
                            <button class="btn btn-success" onclick="likeEvent(event)"  id="likeBtn" value = <%= tweet._id %> ><i class="bi bi-hand-thumbs-up"></i> &nbsp;<%= tweet.likes %></button>
                            <button class="btn btn-warning" onclick="editEvent(event)"  id="editBtn" value = <%= tweet._id %> ><i class="bi bi-pencil"></i></button>
                            <button class="btn btn-danger"  onclick="deleteEvent(event)"  id="deleteBtn" value = <%= tweet._id %> ><i class="bi bi-trash"></i></button>
                            <button class="btn btn-primary" onclick="saveEvent(event)" style="display: none;"  id = <%= "saveBtn" + tweet._id %> value = <%= tweet._id %> >Save</button>
                        </div>
                        <hr>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>

    
     
      <script>
        if(!localStorage.getItem('currentUsername')){
            window.location.href = '/login';
        }

        // greeting user according to time
        const greeting = document.querySelector('#header_greetings_time');
        const hour = new Date().getHours();
        const welcomeTypes = ['Good morning', 'Good afternoon', 'Good evening'];
        let welcomeText = '';
        if (hour < 12) welcomeText = welcomeTypes[0];
        else if (hour < 18) welcomeText = welcomeTypes[1];
        else welcomeText = welcomeTypes[2];
        greeting.innerHTML = welcomeText;

        // Create tweet event
        const formElement = document.querySelector('#newTweet');
        formElement.addEventListener('submit', async (e) => {
            e.preventDefault();
            const userEnteredTextContent = document.querySelector('#textContent').value;

            const result =  await fetch('/Tweets', {
                method: 'POST',
                headers:{
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    textContent: userEnteredTextContent,
                })
            }).then((res)=> res.json())
            window.location.reload();
        })

        // Tweet like event
        const likeEvent = async(event) => {
            const result = await fetch('/Tweets/liked/'+event.target.value, {
                method: 'PATCH'
            }).then((res)=> res.json())
            window.location.reload();
        }

        // Tweet edit event
        const editEvent = async(event) => {
            const tweetTextContent = document.querySelector('#content'+event.target.value);
            tweetTextContent.contentEditable = true;
            tweetTextContent.focus();
            const editBtn = document.querySelector('#saveBtn'+event.target.value);
            editBtn.style.display = "inline-block";
        }

        // Save edited tweet
        const saveEvent = async (event) => {
            const tweetTextContent = document.querySelector('#content'+event.target.value);
            tweetTextContent.contentEditable = false;
            const editedTweet = tweetTextContent.textContent;
            const editBtn = document.querySelector('#saveBtn'+event.target.value);
            editBtn.style.display = "none";
            const result = await fetch('/Tweets/edit/'+event.target.value, {
                method: 'PUT',
                headers:{
                    "Content-Type": "application/json" 
                },
                body: JSON.stringify({
                    textContent : editedTweet
                })
            }).then((res)=> res.json())
            window.location.reload();
        }

        // Tweet delete event
        const deleteEvent = async(event) => {
            const result = await fetch('/Tweets/Delete/'+event.target.value, {
                method: 'DELETE'
            }).then((res)=> res.json())
            window.location.reload();
        }

        // Logout event
        const logoutBtn = document.querySelector('#logout');
        logoutBtn.addEventListener('click', () => {
            localStorage.removeItem('currentUsername');
            window.location.href = '/login';
        })
      </script>
</body>
</html>